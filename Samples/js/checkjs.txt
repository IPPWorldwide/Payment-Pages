
function validateBT(identifier) {
  var sum = 0;
  var alt = false;
  var i = identifier.length - 1;
  var num;

  while (i >= 0) {
    num = parseInt(identifier.charAt(i), 10);

    if (alt) {
      num *= 2;
      if (num > 9) {
        num = (num % 10) + 1; // eslint-disable-line no-extra-parens
      }
    }

    alt = !alt;

    sum += num;

    i--;
  }

  return sum % 10 === 0;
}

// copied from https://github.com/JamesEggers1/node-luhn
function validateNPM(cardNumber) {
  var trimmed = String(cardNumber).replace(/[\s]/g, ""),
    length = trimmed.length,
    odd = false,
    total = 0,
    calc,
    calc2;

  if (!/^[0-9]+$/.test(trimmed)) {
    return false;
  }

  for (var i = length; i > 0; i--) {
    calc = parseInt(trimmed.charAt(i - 1));
    if (!odd) {
      total += calc;
    } else {
      calc2 = calc * 2;

      switch (calc2) {
        case 10:
          calc2 = 1;
          break;
        case 12:
          calc2 = 3;
          break;
        case 14:
          calc2 = 5;
          break;
        case 16:
          calc2 = 7;
          break;
        case 18:
          calc2 = 9;
          break;
        default:
          calc2 = calc2;
      }
      total += calc2;
    }
    odd = !odd;
  }

  return total !== 0 && total % 10 === 0;
}

var npmInput = document.getElementById("card_number");

function validate(){
  var value = npmInput.value.replace(/-|\s/g, "");
  var isValid = validateBT(value);

  if (!value) {
    isValid = false;
  }

  [npmInput].forEach(function (element) {
    element.classList.remove("invalid", "valid");
    element.classList.add(isValid ? "valid" : "invalid");
  });
};

